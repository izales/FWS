{"ast":null,"code":"var _jsxFileName = \"/Users/iliaszales/Documents/GitHub/Syrene-Website/src/modules/Master/fullpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport CoreStyles from 'react-awesome-slider/src/core/styles.scss';\nimport { toAbsoluteUrl } from \"../../_helpers/AssetsHelpers\";\nimport AwesomeSliderStyles from 'react-awesome-slider/src/styled/scale-out-animation/scale-out-animation.scss';\nimport { withNavigationHandlers, withNavigationContext } from \"react-awesome-slider/dist/navigation\";\nimport { media } from \"./media\";\nimport Solutions from \"../Solutions/Solutions\";\nimport \"./css/master.scss\";\nimport SplashScreen from \"../Layout/SplashScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = withNavigationHandlers(AwesomeSlider);\n_c = Slider;\nexport default _c3 = withNavigationContext(_c2 = _s(() => {\n  _s();\n\n  const [styleLineColor, setStyleLineColor] = useState(\"blue\");\n  const isFirstLoad = useRef(true);\n  var path = 'http://localhost:3000/'; // change to the build path\n\n  if (window.location.href == path + 'solutions' || window.location.href == path + 'portfolio-two') {\n    const lineStyleColor = {\n      color: 'black'\n    };\n    const buttonStyle = {\n      marginTop: '0.5rem',\n      fontSize: '20px',\n      color: 'black'\n    };\n    return /*#__PURE__*/_jsxDEV(Slider, {\n      className: \"awesome-slider\",\n      animation: \"scaleOutAnimation\",\n      cssModule: [CoreStyles, AwesomeSliderStyles],\n      organicArrows: false,\n      buttonContentRight: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"lineStyleRight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 68\n      }, this)],\n      buttonContentLeft: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: {\n            styleLineColor\n          }\n        },\n        className: \" lineStyleLeft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle,\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 107\n      }, this)],\n      media: media,\n      startupScreen: /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this),\n      startupDelay: 500,\n      transitionDelay: 100 // onTransitionEnd={(e) => {\n      //     var video = e.currentSlide.querySelector(\"video\");\n      //     if (video !== null) {\n      //         video.load();\n      //     }\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  } else {\n    const lineStyleColor = {\n      color: 'white'\n    };\n    const buttonStyle = {\n      marginTop: '0.5rem',\n      fontSize: '20px',\n      color: 'white'\n    };\n    return /*#__PURE__*/_jsxDEV(Slider, {\n      className: \"awesome-slider\",\n      animation: \"scaleOutAnimation\",\n      cssModule: [CoreStyles, AwesomeSliderStyles],\n      organicArrows: false,\n      buttonContentRight: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"lineStyleRight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 72\n      }, this)],\n      buttonContentLeft: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: {\n            styleLineColor\n          }\n        },\n        className: \" lineStyleLeft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle,\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 111\n      }, this)],\n      media: media,\n      startupScreen: /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }, this),\n      startupDelay: 500,\n      transitionDelay: 100 // onTransitionEnd={(e) => {\n      //     var video = e.currentSlide.querySelector(\"video\");\n      //     if (video !== null) {\n      //         video.load();\n      //     }\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}, \"4nIT0pHlWR81PymK6gtcIey08Jk=\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"%default%$withNavigationContext\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/iliaszales/Documents/GitHub/Syrene-Website/src/modules/Master/fullpage.js"],"names":["React","useRef","useState","AwesomeSlider","CoreStyles","toAbsoluteUrl","AwesomeSliderStyles","withNavigationHandlers","withNavigationContext","media","Solutions","SplashScreen","Slider","styleLineColor","setStyleLineColor","isFirstLoad","path","window","location","href","lineStyleColor","color","buttonStyle","marginTop","fontSize"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport CoreStyles from 'react-awesome-slider/src/core/styles.scss';\nimport { toAbsoluteUrl } from \"../../_helpers/AssetsHelpers\";\nimport AwesomeSliderStyles from 'react-awesome-slider/src/styled/scale-out-animation/scale-out-animation.scss';\nimport {\n    withNavigationHandlers,\n    withNavigationContext\n} from \"react-awesome-slider/dist/navigation\";\nimport { media } from \"./media\";\nimport Solutions from \"../Solutions/Solutions\";\nimport \"./css/master.scss\"\nimport SplashScreen from \"../Layout/SplashScreen\";\n\nconst Slider = withNavigationHandlers(AwesomeSlider);\n\n\n\nexport default withNavigationContext(() => {\n    const [styleLineColor, setStyleLineColor] = useState(\"blue\");\n    const isFirstLoad = useRef(true);\n\n    var path = 'http://localhost:3000/' // change to the build path\n    if (window.location.href == path + 'solutions' || window.location.href == path + 'portfolio-two') {\n        const lineStyleColor = {\n        color:  'black'\n       \n       };\n     \n    \n       const buttonStyle = {\n       marginTop: '0.5rem',\n       fontSize: '20px',\n        color: 'black'\n       };\n\n    return (\n        <Slider\n            className=\"awesome-slider\"\n            animation=\"scaleOutAnimation\"\n            cssModule={[CoreStyles, AwesomeSliderStyles]}\n            organicArrows={false}\n            buttonContentRight={ [ <p style={buttonStyle}>NEXT</p>,<hr className=\"lineStyleRight\"></hr> ]}\n            buttonContentLeft={[ <hr style={{color: {styleLineColor} }} className=\" lineStyleLeft\" ></hr>,<p style={buttonStyle}>PREV</p>,]}\n            media={media}\n            startupScreen={<SplashScreen />}\n            startupDelay={500}\n            transitionDelay={100}\n            // onTransitionEnd={(e) => {\n            //     var video = e.currentSlide.querySelector(\"video\");\n            //     if (video !== null) {\n            //         video.load();\n            //     }\n            // }}\n        />\n    );\n    } else {\n        const lineStyleColor = {\n            \n            color: 'white'\n           };\n         \n        \n           const buttonStyle = {\n           marginTop: '0.5rem',\n           fontSize: '20px',\n           color: 'white'\n            \n           };\n    \n        return (\n            <Slider\n                className=\"awesome-slider\"\n                animation=\"scaleOutAnimation\"\n                cssModule={[CoreStyles, AwesomeSliderStyles]}\n                organicArrows={false}\n                buttonContentRight={ [ <p style={buttonStyle}>NEXT</p>,<hr className=\"lineStyleRight\"></hr> ]}\n                buttonContentLeft={[ <hr style={{color: {styleLineColor} }} className=\" lineStyleLeft\" ></hr>,<p style={buttonStyle}>PREV</p>,]}\n                media={media}\n                startupScreen={<SplashScreen />}\n                startupDelay={500}\n                transitionDelay={100}\n                // onTransitionEnd={(e) => {\n                //     var video = e.currentSlide.querySelector(\"video\");\n                //     if (video !== null) {\n                //         video.load();\n                //     }\n                // }}\n            />\n        );\n\n\n    }\n});\n"]},"metadata":{},"sourceType":"module"}