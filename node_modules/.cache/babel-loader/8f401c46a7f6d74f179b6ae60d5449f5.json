{"ast":null,"code":"var _jsxFileName = \"/Users/iliaszales/Documents/GitHub/Syrene-Website/src/modules/Master/fullpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport CoreStyles from 'react-awesome-slider/src/core/styles.scss';\nimport { toAbsoluteUrl } from \"../../_helpers/AssetsHelpers\";\nimport AwesomeSliderStyles from 'react-awesome-slider/src/styled/scale-out-animation/scale-out-animation.scss';\nimport { withNavigationHandlers, withNavigationContext } from \"react-awesome-slider/dist/navigation\";\nimport { media } from \"./media\";\nimport Solutions from \"../Solutions/Solutions\";\nimport \"./css/master.scss\";\nimport SplashScreen from \"../Layout/SplashScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = withNavigationHandlers(AwesomeSlider);\n_c = Slider;\nexport default _c3 = withNavigationContext(_c2 = _s(() => {\n  _s();\n\n  const [styleLineColor, setStyleLineColor] = useState(\"grey\");\n  const isFirstLoad = useRef(true);\n  var path = 'http://localhost:3000/'; // change to the build path\n\n  if (window.location.href == path + 'solutions' || window.location.href == path + 'portfolio-two') {\n    const buttonStyle1 = {\n      marginTop: '0.5rem',\n      fontSize: '20px',\n      color: \"black\"\n    };\n    return /*#__PURE__*/_jsxDEV(Slider, {\n      className: \"awesome-slider\",\n      animation: \"scaleOutAnimation\",\n      cssModule: [CoreStyles, AwesomeSliderStyles],\n      organicArrows: false,\n      buttonContentRight: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle1,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: `${styleLineColor}`\n        },\n        className: \"lineStyleRight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 72\n      }, this)],\n      buttonContentLeft: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: \"black\"\n        },\n        className: \"lineStyleLeft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle1,\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 102\n      }, this)],\n      media: media // startupScreen={<Solutions />}\n      // startupDelay={100}\n      ,\n      transitionDelay: 100 // onTransitionEnd={(e) => {\n      //     var video = e.currentSlide.querySelector(\"video\");\n      //     if (video !== null) {\n      //         video.load();\n      //     }\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  } else {\n    const buttonStyle2 = {\n      marginTop: '0.5rem',\n      fontSize: '20px',\n      color: \"white\"\n    };\n    return /*#__PURE__*/_jsxDEV(Slider, {\n      className: \"awesome-slider\",\n      animation: \"scaleOutAnimation\",\n      cssModule: [CoreStyles, AwesomeSliderStyles],\n      organicArrows: false,\n      buttonContentRight: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle2,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: \"white\"\n        },\n        className: \"lineStyleRight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 72\n      }, this)],\n      buttonContentLeft: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: \"white\"\n        },\n        className: \"lineStyleLeft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle2,\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 102\n      }, this)],\n      media: media // startupScreen={<Solutions />}\n      // startupDelay={100}\n      ,\n      transitionDelay: 100 // onTransitionEnd={(e) => {\n      //     var video = e.currentSlide.querySelector(\"video\");\n      //     if (video !== null) {\n      //         video.load();\n      //     }\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}, \"DB8LKUOcnPbjMYQESMiiyqVWzPU=\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"%default%$withNavigationContext\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/iliaszales/Documents/GitHub/Syrene-Website/src/modules/Master/fullpage.js"],"names":["React","useRef","useState","AwesomeSlider","CoreStyles","toAbsoluteUrl","AwesomeSliderStyles","withNavigationHandlers","withNavigationContext","media","Solutions","SplashScreen","Slider","styleLineColor","setStyleLineColor","isFirstLoad","path","window","location","href","buttonStyle1","marginTop","fontSize","color","buttonStyle2"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport CoreStyles from 'react-awesome-slider/src/core/styles.scss';\nimport { toAbsoluteUrl } from \"../../_helpers/AssetsHelpers\";\nimport AwesomeSliderStyles from 'react-awesome-slider/src/styled/scale-out-animation/scale-out-animation.scss';\nimport {\n    withNavigationHandlers,\n    withNavigationContext\n} from \"react-awesome-slider/dist/navigation\";\nimport { media } from \"./media\";\nimport Solutions from \"../Solutions/Solutions\";\nimport \"./css/master.scss\"\nimport SplashScreen from \"../Layout/SplashScreen\";\n\nconst Slider = withNavigationHandlers(AwesomeSlider);\n\nexport default withNavigationContext(() => {\n    const [styleLineColor, setStyleLineColor] = useState(\"grey\");\n    const isFirstLoad = useRef(true);\n\n\n    var path = 'http://localhost:3000/' // change to the build path\n\n    if (window.location.href == path + 'solutions' || window.location.href == path + 'portfolio-two') {\n        const buttonStyle1 = {\n            marginTop: '0.5rem',\n            fontSize: '20px',\n            color: \"black\"\n\n        };\n        return (\n            <Slider\n                className=\"awesome-slider\"\n                animation=\"scaleOutAnimation\"\n                cssModule={[CoreStyles, AwesomeSliderStyles]}\n                organicArrows={false}\n\n                buttonContentRight={[<p style={buttonStyle1}>NEXT</p>, <hr style={{ color: `${styleLineColor}` }} className=\"lineStyleRight\"></hr>]}\n                buttonContentLeft={[<hr style={{ color: \"black\" }} className=\"lineStyleLeft\" ></hr>, <p style={buttonStyle1}>PREV</p>]}\n                media={media}\n                // startupScreen={<Solutions />}\n                // startupDelay={100}\n                transitionDelay={100}\n            // onTransitionEnd={(e) => {\n            //     var video = e.currentSlide.querySelector(\"video\");\n            //     if (video !== null) {\n            //         video.load();\n            //     }\n            // }}\n            />\n        );\n\n    } else {\n        const buttonStyle2 = {\n            marginTop: '0.5rem',\n            fontSize: '20px',\n            color: \"white\"\n\n        };\n        return (\n\n            <Slider\n                className=\"awesome-slider\"\n                animation=\"scaleOutAnimation\"\n                cssModule={[CoreStyles, AwesomeSliderStyles]}\n                organicArrows={false}\n\n                buttonContentRight={[<p style={buttonStyle2}>NEXT</p>, <hr style={{ color: \"white\" }} className=\"lineStyleRight\"></hr>]}\n                buttonContentLeft={[<hr style={{ color: \"white\" }} className=\"lineStyleLeft\" ></hr>, <p style={buttonStyle2}>PREV</p>,]}\n                media={media}\n                // startupScreen={<Solutions />}\n                // startupDelay={100}\n                transitionDelay={100}\n            // onTransitionEnd={(e) => {\n            //     var video = e.currentSlide.querySelector(\"video\");\n            //     if (video !== null) {\n            //         video.load();\n            //     }\n            // }}\n            />\n        );\n\n    }\n\n\n});\n"]},"metadata":{},"sourceType":"module"}