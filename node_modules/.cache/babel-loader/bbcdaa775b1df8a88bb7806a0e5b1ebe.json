{"ast":null,"code":"var _jsxFileName = \"/Users/iliaszales/Documents/GitHub/Syrene-Website/src/modules/Master/fullpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport CoreStyles from 'react-awesome-slider/src/core/styles.scss';\nimport { toAbsoluteUrl } from \"../../_helpers/AssetsHelpers\";\nimport AwesomeSliderStyles from 'react-awesome-slider/src/styled/scale-out-animation/scale-out-animation.scss';\nimport { withNavigationHandlers, withNavigationContext } from \"react-awesome-slider/dist/navigation\";\nimport { media } from \"./media\";\nimport Solutions from \"../Solutions/Solutions\";\nimport \"./css/master.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = withNavigationHandlers(AwesomeSlider);\n_c = Slider;\nexport default _c3 = withNavigationContext(_c2 = _s(() => {\n  _s();\n\n  const [styleLineColor, setStyleLineColor] = useState(\"blue !important\");\n  const isFirstLoad = useRef(true);\n  const lineStyleColor = {\n    color: {\n      styleLineColor\n    }\n  };\n  const buttonStyle = {\n    marginTop: '0.6rem',\n    fontSize: '20px'\n  };\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    className: \"awesome-slider\",\n    animation: \"scaleOutAnimation\",\n    cssModule: [CoreStyles, AwesomeSliderStyles],\n    organicArrows: false,\n    buttonContentRight: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: buttonStyle,\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"lineStyleRight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 68\n    }, this)],\n    buttonContentLeft: [/*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        color: {\n          styleLineColor\n        }\n      },\n      className: \" lineStyleLeft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: buttonStyle,\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 107\n    }, this)],\n    media: media // startupScreen={<Solutions />}\n    // startupDelay={100}\n    ,\n    transitionDelay: 100 // onTransitionEnd={(e) => {\n    //     var video = e.currentSlide.querySelector(\"video\");\n    //     if (video !== null) {\n    //         video.load();\n    //     }\n    // }}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}, \"QSt+HivBEyN4W0WByWp/vEtKxsU=\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"%default%$withNavigationContext\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/iliaszales/Documents/GitHub/Syrene-Website/src/modules/Master/fullpage.js"],"names":["React","useRef","useState","AwesomeSlider","CoreStyles","toAbsoluteUrl","AwesomeSliderStyles","withNavigationHandlers","withNavigationContext","media","Solutions","Slider","styleLineColor","setStyleLineColor","isFirstLoad","lineStyleColor","color","buttonStyle","marginTop","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,mBAAP,MAAgC,8EAAhC;AACA,SACIC,sBADJ,EAEIC,qBAFJ,QAGO,sCAHP;AAIA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,mBAAP;;AAEA,MAAMC,MAAM,GAAGJ,sBAAsB,CAACJ,aAAD,CAArC;KAAMQ,M;AAIN,qBAAeH,qBAAqB,UAAC,MAAM;AAAA;;AACvC,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,iBAAD,CAApD;AACA,QAAMY,WAAW,GAAGb,MAAM,CAAC,IAAD,CAA1B;AAEI,QAAMc,cAAc,GAAG;AACvBC,IAAAA,KAAK,EAAE;AAACJ,MAAAA;AAAD;AADgB,GAAvB;AAMD,QAAMK,WAAW,GAAG;AACpBC,IAAAA,SAAS,EAAE,QADS;AAEpBC,IAAAA,QAAQ,EAAE;AAFU,GAApB;AAMH,sBACI,QAAC,MAAD;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,IAAA,SAAS,EAAE,CAACf,UAAD,EAAaE,mBAAb,CAHf;AAII,IAAA,aAAa,EAAE,KAJnB;AAKI,IAAA,kBAAkB,EAAG,cAAE;AAAG,MAAA,KAAK,EAAEW,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,eAAkC;AAAI,MAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAAlC,CALzB;AAMI,IAAA,iBAAiB,EAAE,cAAE;AAAI,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAE;AAACJ,UAAAA;AAAD;AAAR,OAAX;AAAuC,MAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAF,eAA2E;AAAG,MAAA,KAAK,EAAEK,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3E,CANvB;AAOI,IAAA,KAAK,EAAER,KAPX,CAQI;AACA;AATJ;AAUI,IAAA,eAAe,EAAE,GAVrB,CAWA;AACA;AACA;AACA;AACA;AACA;;AAhBA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CApCmC,kCAApC","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport CoreStyles from 'react-awesome-slider/src/core/styles.scss';\nimport { toAbsoluteUrl } from \"../../_helpers/AssetsHelpers\";\nimport AwesomeSliderStyles from 'react-awesome-slider/src/styled/scale-out-animation/scale-out-animation.scss';\nimport {\n    withNavigationHandlers,\n    withNavigationContext\n} from \"react-awesome-slider/dist/navigation\";\nimport { media } from \"./media\";\nimport Solutions from \"../Solutions/Solutions\";\nimport \"./css/master.scss\"\n\nconst Slider = withNavigationHandlers(AwesomeSlider);\n\n\n\nexport default withNavigationContext(() => {\n    const [styleLineColor, setStyleLineColor] = useState(\"blue !important\");\n    const isFirstLoad = useRef(true);\n\n        const lineStyleColor = {\n        color: {styleLineColor},\n        \n       };\n     \n    \n       const buttonStyle = {\n       marginTop: '0.6rem',\n       fontSize: '20px'\n        \n       };\n\n    return (\n        <Slider\n            className=\"awesome-slider\"\n            animation=\"scaleOutAnimation\"\n            cssModule={[CoreStyles, AwesomeSliderStyles]}\n            organicArrows={false}\n            buttonContentRight={ [ <p style={buttonStyle}>NEXT</p>,<hr className=\"lineStyleRight\"></hr> ]}\n            buttonContentLeft={[ <hr style={{color: {styleLineColor} }} className=\" lineStyleLeft\" ></hr>,<p style={buttonStyle}>PREV</p>,]}\n            media={media}\n            // startupScreen={<Solutions />}\n            // startupDelay={100}\n            transitionDelay={100}\n        // onTransitionEnd={(e) => {\n        //     var video = e.currentSlide.querySelector(\"video\");\n        //     if (video !== null) {\n        //         video.load();\n        //     }\n        // }}\n        />\n    );\n});\n"]},"metadata":{},"sourceType":"module"}